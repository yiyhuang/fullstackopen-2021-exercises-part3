{"version":3,"sources":["services/persons.js","components/Persons.js","components/InputField.js","components/PersonForm.js","components/NameFilter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","destroy","delete","Person","person","handleDelete","name","number","onClick","Persons","persons","map","InputField","label","value","onChange","Button","type","text","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","NameFilter","filter","handleFilterChange","successColor","color","errorColor","Notification","message","error","success","className","style","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","filteredPersons","toLowerCase","includes","event","target","preventDefault","find","window","confirm","updatedPerson","returnedPerson","setTimeout","catch","updateNumber","personObject","concat","personId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.448b791d.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst destroy = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst exportedObject = {\n  getAll,\n  create,\n  update,\n  destroy\n};\n\nexport default exportedObject;\n","import React from \"react\";\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <li>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => handleDelete(person.id)}>delete</button>\n    </li>\n  );\n};\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      <ul>\n        {persons.map((person) => (\n          <Person key={person.name} person={person} handleDelete={handleDelete}/>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst InputField = ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default InputField;","import React from \"react\";\nimport InputField from \"./InputField\";\n\nconst Button = ({ type, text }) => <button type={type}>{text}</button>;\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <InputField label=\"name: \" value={newName} onChange={handleNameChange} />\n      <InputField\n        label=\"number: \"\n        value={newNumber}\n        onChange={handleNumberChange}\n      />\n      <Button type=\"submit\" text=\"add\" />\n    </form>\n  );\n};\n\nexport default PersonForm;","import React from \"react\";\nimport InputField from \"./InputField\";\n\nconst NameFilter = ({ label, filter, handleFilterChange }) => {\n  return (\n    <InputField label={label} value={filter} onChange={handleFilterChange} />\n  );\n};\n\nexport default NameFilter;","import React from \"react\";\n\nconst successColor = { color: \"green\" };\nconst errorColor = { color: \"red\" };\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  } else {\n    const text = message.error || message.success;\n    const color = message.error ? errorColor : successColor;\n\n    return (\n      <div className=\"notification\" style={color}>\n        {text}\n      </div>\n    );\n  }\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport NameFilter from \"./components/NameFilter\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = () => {\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    personService\n      .create(personObject)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n\n        setMessage({\n          success: `Added ${returnedPerson.name}`,\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setMessage({\n          error: `${error.response.data.error}`,\n        });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n  };\n\n  const updateNumber = (person) => {\n    if (\n      window.confirm(\n        `${person.name} is already added to the phonebook, replace the old number with a new one?`\n      )\n    ) {\n      const updatedPerson = { ...person, number: newNumber };\n      personService\n        .update(updatedPerson.id, updatedPerson)\n        .then((returnedPerson) => {\n          setPersons(\n            persons.map((person) =>\n              person.id !== updatedPerson.id ? person : returnedPerson\n            )\n          );\n\n          setMessage({\n            success: `Updated ${returnedPerson.name}'s number`,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setPersons(\n            persons.filter((person) => person.id !== updatedPerson.id)\n          );\n          setMessage({\n            error: `${updatedPerson.name} was already deleted from server`,\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const handleAddPersonForm = (event) => {\n    event.preventDefault();\n\n    const person = persons.find((person) => person.name === newName);\n    // if person already exists\n    if (person) {\n      updateNumber(person);\n    } else {\n      addPerson();\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const handleDelete = (personId) => {\n    const person = persons.find((person) => person.id === personId);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.destroy(personId).then(() => {\n        setMessage({\n          success: `Deleted ${person.name}`,\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n      setPersons(persons.filter((person) => person.id !== personId));\n    }\n  };\n\n  const filteredPersons = filter\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <NameFilter\n        label=\"filter shown with \"\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        addPerson={handleAddPersonForm}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}